# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.62.0"
name = "libp2p-metrics"
version = "0.11.0"
authors = ["Max Inden <mail@max-inden.de>"]
description = "Metrics for libp2p"
readme = "README.md"
keywords = [
    "peer-to-peer",
    "libp2p",
    "networking",
]
categories = [
    "network-programming",
    "asynchronous",
]
license = "MIT"
repository = "https://github.com/libp2p/rust-libp2p"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]
rustc-args = [
    "--cfg",
    "docsrs",
]

[dependencies.libp2p-core]
version = "0.38.0"

[dependencies.libp2p-dcutr]
version = "0.8.0"
optional = true

[dependencies.libp2p-identify]
version = "0.41.0"
optional = true

[dependencies.libp2p-kad]
version = "0.42.0"
optional = true

[dependencies.libp2p-ping]
version = "0.41.0"
optional = true

[dependencies.libp2p-relay]
version = "0.14.0"
optional = true

[dependencies.libp2p-swarm]
version = "0.41.0"

[dependencies.prometheus-client]
version = "0.18.0"

[dev-dependencies.env_logger]
version = "0.9.0"

[dev-dependencies.futures]
version = "0.3.1"

[dev-dependencies.hyper]
version = "0.14"
features = [
    "server",
    "tcp",
    "http1",
]

[dev-dependencies.log]
version = "0.4.0"

[dev-dependencies.tokio]
version = "1"
features = ["rt-multi-thread"]

[features]
dcutr = ["libp2p-dcutr"]
gossipsub = ["libp2p-gossipsub"]
identify = ["libp2p-identify"]
kad = ["libp2p-kad"]
ping = ["libp2p-ping"]
relay = ["libp2p-relay"]

[target."cfg(not(target_os = \"unknown\"))".dependencies.libp2p-gossipsub]
version = "0.43.0"
optional = true
